/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsNumber,
  IsEnum,
  IsJSON,
  ValidateNested,
} from "class-validator";
import { EnumUrlTags } from "./EnumUrlTags";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UrlGroupUpdateManyWithoutUrlsInput } from "./UrlGroupUpdateManyWithoutUrlsInput";
import { Type } from "class-transformer";
import { UserUpdateManyWithoutUrlsInput } from "./UserUpdateManyWithoutUrlsInput";
@InputType()
class UrlUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  favico?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  hits?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shortAddress?: string;

  @ApiProperty({
    required: false,
    enum: EnumUrlTags,
    isArray: true,
  })
  @IsEnum(EnumUrlTags, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumUrlTags], {
    nullable: true,
  })
  tags?: Array<"Asdasasd">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  thumbnail?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  title?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UrlGroupUpdateManyWithoutUrlsInput,
  })
  @ValidateNested()
  @Type(() => UrlGroupUpdateManyWithoutUrlsInput)
  @IsOptional()
  @Field(() => UrlGroupUpdateManyWithoutUrlsInput, {
    nullable: true,
  })
  urlGroups?: UrlGroupUpdateManyWithoutUrlsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutUrlsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutUrlsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutUrlsInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutUrlsInput;
}
export { UrlUpdateInput };
